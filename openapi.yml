openapi: 3.0.3
info: 
  title: My Figurines Store "Marbel"
  description: |
    # About Us
    This is the ***APIs*** of my online store of `Figurines`.
    # Categories for which figurines are available: 
      - **Comics**
      - **Anime**
          - **OnePiece**
          - **Naruto**
          - **Bleach**
  termsOfService: https://figurines.com/terms
  contact: 
    name: Deepak Kumar
    email: figurinesdeepak@gmail.com
  license:
    name: figurine license
    url: a.com
  version: 0.0.1
servers: 
  - url: https://figurines.com
    description: dev
  - url: https://figurines.com
    description: PROD
tags:
  - name: Products
    description: Product-related Operations
  - name: Orders
    description: Order-related Operations
paths:
  /products:
    get:
      tags:
        - Products
      summary: List all products
      description: |
        Returns the list of products supported by Marbel.
      parameters:
        - name: product
          in: query
          schema:
            type: integer
            minimum: 100
            maximum: 1000
          examples:
            Anime:
              $ref: "#/components/examples/Anime"
            Cartoons:
              $ref: "#/components/examples/Cartoons"
            Comics:
              $ref: "#/components/examples/Comics"
      responses:
        '200':
          description: A list of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
              examples:
                all-products-data:
                  $ref: "#/components/examples/all-products-data"
                single-product-data:
                  $ref: "#/components/examples/single-product-data"
        '500':
          $ref: "#/components/responses/InternalServerError"
        '400':
          $ref: "#/components/responses/BadRequest"
        '404':
          $ref: "#/components/responses/NotFound"
  /products/{productId}:
    get:
      tags:
        - Products
      summary: Return product details
      security:
        - BasicAuth: []
      
      description: |
        Returns the product details from Marbel.
      parameters:
        - $ref: "#/components/parameters/productIdParameter"
      responses:
        '200':
          description: Return product details
          content:
            application/json:
              schema:
               $ref: "#/components/schemas/Product"
              examples:
                anime-productId-data:
                  $ref: "#/components/examples/anime-productId-data"
                Comics-productId-data:  
                  $ref: "#/components/examples/Comics-productId-data"
        '400':
          $ref: "#/components/responses/BadRequest"
        '404':
          $ref: "#/components/responses/NotFound"
        '500':
          $ref: "#/components/responses/InternalServerError"
        
  /orders:
    post:
      tags:
        - Orders
      summary: Create Order
      description: |
        Post order details to Marbel for processing
        and shipping
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                products:
                  type: array
                  items:
                    $ref: "#/components/schemas/Product"
                address:
                  $ref: "#/components/schemas/Address"
      responses:
        '201':
          description: Order created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  orderId:
                    type: integer
                    enum:
                      - 10001
              
                
        '404':
          $ref: "#/components/responses/NotFound"
        '500':
          $ref: "#/components/responses/InternalServerError"
    get:
      tags:
        - Orders
      summary: Get Order Details
      description: Get order details from Marbel.
      security:
        - ApiKeyAuth: []  
      parameters:
        - $ref: "#/components/parameters/orderIdQueryParam"
      responses:
        '200':
          description: Fetch Order details successfully
          content:
            application/json:
              schema: 
                type: object
                properties:
                  orderId:
                    type: integer
                    enum:
                      - 1001
                  products:
                    type: array
                    items:
                      $ref: "#/components/schemas/Product"
                  address:
                    $ref: "#/components/schemas/Address"
        '400':
          $ref: "#/components/responses/BadRequest"
        '404':
          $ref: "#/components/responses/NotFound"
        '500':
          $ref: "#/components/responses/InternalServerError"

components:
  parameters:
    orderIdQueryParam:
      name: orderId
      in: query    
      required: true
      schema:
        type: integer
    productIdParameter:
      name: productId
      in: path
      required: true
      schema:
        type: integer
        minimum: 100
        maximum: 1000
        example: 101
  schemas:
    Address:
      type: object
      properties:
        addressLine:
          type: string
          enum:
            - Sector-4
        city:
          type: string
          enum:
            - Bokaro
        state:
          type: string
          enum:
            - Jharkhand
            - Gujarat
            - Goa
        pincode:
          type: string
          enum:
            - 827004
        isOfficeAddress:
          type: boolean
      required: [addressLine, city, state, pincode]
    Product:
      type: object
      properties:
        productId:
          type: integer
          enum:
            - 102
        name:
         type: string
         enum:
           - Zoro
        price:
          type: number
          enum:
            - 899
          format: float
        categoryName:
          type: string
          enum:
            - anime
          nullable: true
        orderDate:
          type: string
          format: date-time
        quantity:
          type: integer
          enum:
            - 02
          description: |
            ***Quantity*** represents `stock` available in store.
  examples:
    anime-productId-data:
      summary: Anime ProductId example data
      value:
        - productId: 101
          name: Luffy
          price: 999.00
          categoryName: anime
          quantity: 96
                    
    Comics-productId-data:
      summary: Comics product example data
      value:
        - productId: 110
          name: Wolverine
          price: 3339.33
          categoryName: Comics
          quantity: 11
    all-products-data:
      summary: All Products example data
      value:
        - productId: 101
          name: Luffy
          price: 999.00
          categoryName: anime
          quantity: 96
        - productId: 102
          name: Zoro
          price: 899.00
          categoryName: anime
          quantity: 121
    single-product-data:
      summary: Single product example data
      value:
        - productId: 110
          name: Wolverine
          price: 3339.33
          categoryName: Comics
          quantity: 11'
    Anime:
      summary: Use this example for Anime
      value: 101
    Cartoons:
      value: 102
    Comics:
      value: 103
  responses:  
    InternalServerError:
      description: |
        An error occurred while processing the request.
        Please contact support@marbel.com
      content:
        application/json:
          example:
            message: Internal Server Error
            details: An unexpected error occurred.
    NotFound:
      description: |
        URL that you used for your request doesn't 
        exist on the API server
      content:
        application/json:
          example:
            message: Not Found
            details: The requested resource was not found.
    BadRequest:
      description: |
        You did not correctly format your API request.
      content:
        application/json:
          example:
            message: Bad Request
            details: The request was not properly formatted.

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: ClientId, ClientSecret, Source, TranId
      
    OAuth2ClientCredentials:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://example.com/token
          scopes:
            write: Read and write.
            read: Read only.
    BasicAuth:
      type: http
      scheme: basic
